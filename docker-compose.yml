version: "3.8"

services:
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - IDX_MODE=dashboard
      - PORT=5000
      - FLASK_ENV=production
      - TZ=Asia/Jakarta
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./models:/app/models
      - ./exports:/app/exports
      - ./src/config:/app/src/config
    depends_on:
      - redis
    restart: unless-stopped

  screener:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - IDX_MODE=screening
      - TZ=Asia/Jakarta
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./models:/app/models
      - ./exports:/app/exports
      - ./src/config:/app/src/config
    depends_on:
      - redis
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: idx-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: idx-postgres
    environment:
      - POSTGRES_DB=idx_screener
      - POSTGRES_USER=idx_user
      - POSTGRES_PASSWORD=idx_pass
      - TZ=Asia/Jakarta
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    profiles:
      - database

volumes:
  redis-data:
  postgres-data:
